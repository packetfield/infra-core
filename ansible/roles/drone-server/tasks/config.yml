---

- name: install service account
  copy:
    src: serviceaccount.json
    dest: /tmp/serviceaccount.json
  changed_when: False

- name: docker login
  shell: docker login -u _json_key -p "$(cat /tmp/serviceaccount.json)" eu.gcr.io
  changed_when: False

- name: remove service account file
  file:
    path: /tmp/serviceaccount.json
    state: absent
  changed_when: False

- name: pull drone image "{{ drone_image }}:{{ drone_tag }}"
  docker_image:
    name: "{{ drone_image }}:{{ drone_tag }}"

# - name: create config dir
#   file:
#     path: /etc/msglib
#     state: directory
#     owner: root
#     mode: 0755

# - name: template api-broker config
#   template:
#     src: emdp.yml.j2
#     dest: /etc/msglib/emdp.yml
#     mode: 0644
#   register: api_broker_config






- name: docker compose drone
  docker_service:
    project_name: drone
    definition:
      version: '2'
      services:
        drone-server:
          image: drone/drone:0.8

          ports:
            - 80:8000
            - 443:443
            - 9000
          volumes:
            - /var/lib/drone:/var/lib/drone/
          restart: unless-stopped
          environment:
            - DRONE_GITHUB=true
            - DRONE_GITHUB_ADMINS=starkers
            - DRONE_HOST=https://drone.packetfield.com
            - DRONE_LETS_ENCRYPT=true
            - DRONE_OPEN=true
            - DRONE_ORGS=packetfield
            - DRONE_GITHUB_CLIENT={{ drone_github_client }}
            - DRONE_GITHUB_SECRET={{ drone_github_secret }}
            - DRONE_SECRET={{ drone_secret }}
        drone-agent:
          image: drone/agent:0.8
          restart: unless-stopped
          depends_on:
            - drone-server
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
          environment:
            - DRONE_SERVER=drone-server:9000
            - DRONE_SECRET={{ drone_secret }}






# - name: docker compose api-broker
#   docker_service:
#     project_name: drone
#     definition:
#       version: '2'
#       services:
#         drone-server:
#           image: drone/drone:0.5
#           ports:
#             - 80:8000
#           volumes:
#             - ./drone:/var/lib/drone/
#           restart: always
#           environment:
#             - DRONE_OPEN=true
#             - DRONE_GITHUB=true
#             - DRONE_GITHUB_CLIENT={{ drone_github_client }}
#             - DRONE_GITHUB_SECRET={{ drone_github_secret }}
#             - DRONE_SECRET={{ drone_secret }}
#         drone-agent:
#           image: drone/drone:0.5
#           command: agent
#           restart: always
#           depends_on: [ drone-server ]
#           volumes:
#             - /var/run/docker.sock:/var/run/docker.sock
#           environment:
#             - DRONE_SERVER=ws://drone-server:8000/ws/broker
#             - DRONE_SECRET={{ drone_secret }}

  # register: output

# - name: docker compose api-broker
#   docker_service:
#     project_name: api-broker
#     restarted: true
#     definition:
#       version: '2'
#       services:
#         api-broker:
#           network_mode: "host"
#           image: eu.gcr.io/sportr-uk/msglib:{{ api_broker_version }}
#           entrypoint: msglib_broker_emdp
#           command: --config=/etc/msglib/emdp.yml
#           restart: unless-stopped
#           ports:
#             - "54321:54321"
#             - "9024:9024"
#           volumes:
#             - /etc/msglib:/etc/msglib
#           environment:
#             - SENTRY_DSN={{ sentry_dsn }}
#   when: ( api_broker_config.changed )

- meta: flush_handlers

# - name: validate for api-broker listening
#   wait_for:
#     port:    54321
#     delay:   3
#     timeout: 120

# tasks file for drone-server
